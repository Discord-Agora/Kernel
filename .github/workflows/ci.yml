name: CI

on:
  push:
    branches: [ "master", "dev", "dev-kazuki" ]
    paths-ignore:
      - '**.md'
      - '.gitignore'
  pull_request:
    branches: [ "master", "dev", "dev-kazuki" ]
    paths-ignore:
      - '**.md'
      - '.gitignore'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: write
  pull-requests: write

jobs:
  lint:
    name: Code Quality
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
          cache: 'pip'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install black ruff
          
      - name: Check code formatting
        run: black --check .
        continue-on-error: true
        
      - name: Lint with ruff
        run: ruff check .
        continue-on-error: true
        
      - name: Post Lint Results
        if: always()
        uses: actions/github-script@v6
        with:
          script: |
            const { owner, repo } = context.repo;
            const run_id = context.runId;
            const conclusion = '${{ job.status }}';
            
            if (context.eventName === 'pull_request') {
              const pr_number = context.payload.pull_request.number;
              await github.rest.issues.createComment({
                owner,
                repo,
                issue_number: pr_number,
                body: `Lint Results: ${conclusion}\nWorkflow Run: https://github.com/${owner}/${repo}/actions/runs/${run_id}`
              });
            } else if (context.eventName === 'push') {
              const sha = context.sha;
              await github.rest.repos.createCommitComment({
                owner,
                repo,
                commit_sha: sha,
                body: `Lint Results: ${conclusion}\nWorkflow Run: https://github.com/${owner}/${repo}/actions/runs/${run_id}`
              });
            }

  test:
    name: Test Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    needs: lint
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11", "3.12", "3.13"]
        
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
          
      - name: Install tox
        run: |
          python -m pip install --upgrade pip
          pip install tox tox-gh-actions
          
      - name: Test with tox
        run: tox
        env:
          PYTHON_VERSION: ${{ matrix.python-version }}
          
      - name: Post Test Results
        if: always()
        uses: actions/github-script@v6
        with:
          script: |
            const { owner, repo } = context.repo;
            const run_id = context.runId;
            const conclusion = '${{ job.status }}';
            const version = '${{ matrix.python-version }}';
            
            if (context.eventName === 'pull_request') {
              const pr_number = context.payload.pull_request.number;
              await github.rest.issues.createComment({
                owner,
                repo,
                issue_number: pr_number,
                body: `Test Results (Python ${version}): ${conclusion}\nWorkflow Run: https://github.com/${owner}/${repo}/actions/runs/${run_id}`
              });
            } else if (context.eventName === 'push') {
              const sha = context.sha;
              await github.rest.repos.createCommitComment({
                owner,
                repo,
                commit_sha: sha,
                body: `Test Results (Python ${version}): ${conclusion}\nWorkflow Run: https://github.com/${owner}/${repo}/actions/runs/${run_id}`
              });
            }

  build:
    name: Build Package
    needs: [test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
          cache: 'pip'
          
      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build
          
      - name: Build package
        run: python -m build
        
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/
          
      - name: Post Build Results
        if: always()
        uses: actions/github-script@v6
        with:
          script: |
            const { owner, repo } = context.repo;
            const run_id = context.runId;
            const conclusion = '${{ job.status }}';
            
            if (context.eventName === 'pull_request') {
              const pr_number = context.payload.pull_request.number;
              await github.rest.issues.createComment({
                owner,
                repo,
                issue_number: pr_number,
                body: `Build Results: ${conclusion}\nWorkflow Run: https://github.com/${owner}/${repo}/actions/runs/${run_id}`
              });
            } else if (context.eventName === 'push') {
              const sha = context.sha;
              await github.rest.repos.createCommitComment({
                owner,
                repo,
                commit_sha: sha,
                body: `Build Results: ${conclusion}\nWorkflow Run: https://github.com/${owner}/${repo}/actions/runs/${run_id}`
              });
            }
